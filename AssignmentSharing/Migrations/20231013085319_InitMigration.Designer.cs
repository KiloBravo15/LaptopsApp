// <auto-generated />
using System;
using AssignmentSharing;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssignmentSharing.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231013085319_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("AssignmentSharing.Models.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DeveloperId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IssueId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeCost")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("IssueId");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("AssignmentSharing.Models.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Pseudonym")
                        .IsUnique();

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("AssignmentSharing.Models.Issue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Label")
                        .IsUnique();

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("AssignmentSharing.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AssignmentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OccuranceTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("DeveloperIssue", b =>
                {
                    b.Property<Guid>("DevelopersId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IssuesId")
                        .HasColumnType("TEXT");

                    b.HasKey("DevelopersId", "IssuesId");

                    b.HasIndex("IssuesId");

                    b.ToTable("DeveloperIssue");
                });

            modelBuilder.Entity("AssignmentSharing.Models.Assignment", b =>
                {
                    b.HasOne("AssignmentSharing.Models.Developer", "Developer")
                        .WithMany("Assignments")
                        .HasForeignKey("DeveloperId");

                    b.HasOne("AssignmentSharing.Models.Issue", "Issue")
                        .WithMany("Assignments")
                        .HasForeignKey("IssueId");

                    b.Navigation("Developer");

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("AssignmentSharing.Models.Status", b =>
                {
                    b.HasOne("AssignmentSharing.Models.Assignment", "Assignment")
                        .WithMany("Statuses")
                        .HasForeignKey("AssignmentId");

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("DeveloperIssue", b =>
                {
                    b.HasOne("AssignmentSharing.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssignmentSharing.Models.Issue", null)
                        .WithMany()
                        .HasForeignKey("IssuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssignmentSharing.Models.Assignment", b =>
                {
                    b.Navigation("Statuses");
                });

            modelBuilder.Entity("AssignmentSharing.Models.Developer", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("AssignmentSharing.Models.Issue", b =>
                {
                    b.Navigation("Assignments");
                });
#pragma warning restore 612, 618
        }
    }
}
